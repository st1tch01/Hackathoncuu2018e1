#include <Servo.h>
const int trigPin = 9;
const int echoPin = 10;
const int buzzer = 11;
int potPin = analogRead(A0);    
Servo myservo;  // create servo object to control a servo
int pos = 0;    // variable to store the servo position

// defines variables
long duration;
int distance;
void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  pinMode(buzzer, OUTPUT); // Sets the echoPin as an Input
  myservo.attach(7);  // attaches the servo on pin 9 to the servo object 
  Serial.begin(9600); // Starts the serial communication
  }
void loop() {
  // Clears the trigPin
 digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  //Turn off the buzzer
  digitalWrite(buzzer, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance= duration*0.034/2;
  // Prints the distance on the Serial Monitor
  Serial.print("Distance: ");
  delay(100);
  Serial.println(distance);
  if(distance >=13)
  {
    digitalWrite(buzzer, HIGH);   // turn the buzzer on (HIGH is the voltage level)
    delay(1000);                       // wait for a second
    Serial.println("vacio");
    
  }

  //servo
   for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
  for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }

  // potenciometro
int SensorValue = analogRead(potPin);    
  if (SensorValue == 0)
  {
    Serial.println("Valor del sensor");
    Serial.println(SensorValue);
    delay (100); 
    /*  if (SensorValue >= 500)
        {
          Serial.println("Valor del sensor");
          Serial.println(SensorValue);
          delay (100);
         }
 */}
 /* else 
    {
   Serial.println("Valor del sensor");
   Serial.println(SensorValue);
   delay (100);
  } */
  

  
  }
